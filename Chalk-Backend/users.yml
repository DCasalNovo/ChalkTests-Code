openapi: "3.0.3"
info:
  title: Chalk - Test Your Knowledge
  version: "1.0.0"
servers:
  - url: https://localhost:8080/v1/

paths:
  /user:
    post:
      summary: Create user
      description: This method is used to create an user regardless of its type.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user
              additionalProperties: false
              properties:
                user:
                  oneOf:
                    - $ref: '#/components/schemas/StudentWithoutId'
                    - $ref: '#/components/schemas/SpecialistWithoutId'
                    - $ref: '#/components/schemas/InstitutionManagerWithoutId'
      responses:
        "200":
          description: OK

    get:
      parameters:
        - name: institution
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
            Find users from this institution.
        - name: course
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
              Find users from this course (institution is required).
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  anyOf:
                    - $ref: '#/components/schemas/Student'
                    - $ref: '#/components/schemas/Specialist'
                    - $ref: '#/components/schemas/InstitutionManager'
        '400':
          description: Either 'institution' or 'course'+'institution' are required.


  /user/{userId}:
    parameters:
      - name: userId
        in: path
        description: User identifier
        required: true
        schema:
          $ref: "#/components/schemas/StringInput"
          example: "user1"
    get:
      summary: Get user by user id
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Student'
                  - $ref: '#/components/schemas/Specialist'
                  - $ref: '#/components/schemas/InstitutionManager'
        '400':
          description: Invalid user id supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user
      description: Update an existent user in the store
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise:
                  oneOf:
                    - $ref: '#/components/schemas/Student'
                    - $ref: '#/components/schemas/Specialist'
                    - $ref: '#/components/schemas/InstitutionManager'
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid user id supplied
        '404':
          description: User not found

    delete:
      summary: Delete user
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid username supplied
        '404':
          description: User not found

  /user/student:
    get:
      parameters:
        - name: testResolutionId
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
            Find the student that is the owner of the resoluton.
        - name: exerciseResolutionId
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
              Find the student that is the owner of the resoluton.
        - name: institutionId
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
            Find students from this institution.
        - name: courseId
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
              Find students from this course (institution is required).
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
        '400':
          description: Either 'institutionId' or 'courseId'+'institutionId' or 'testResolutionId' or 'exerciseResolutionId' are required.

  /user/specialist:
    get:
      parameters:
        - name: testId
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
            Find the specialists that are the owners of the test.
        - name: institutionId
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
            Find specialists from this institution.
        - name: courseId
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
              Find specialists from this course (institution is required).
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Specialist'
        '400':
          description: Either 'institutionId' or 'courseId'+'institutionId' or 'testId' are required.

  /user/manager:
    get:
      parameters:
        - name: institutionId
          in: query
          schema:
            $ref: "#/components/schemas/StringInput"
          description: >
            Find specialists from this institution.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstitutionManager'
        '400':
          description: The 'institutionId' is required.

components:
  schemas:
    User:
      description: "Basic properties of an user."
      type: object
      required:
        - id
        - name
      additionalProperties: false
      properties:
        id:
          $ref: "#/components/schemas/StringInput"
        name:
          $ref: "#/components/schemas/StringInput"
        photoPath:
          $ref: "#/components/schemas/StringInput"

    UserWithoutId:
      description: "Basic properties of an user."
      type: object
      required:
        - name
      additionalProperties: false
      properties:
        name:
          $ref: "#/components/schemas/StringInput"
        photoPath:
          $ref: "#/components/schemas/StringInput"
          
    SpecialistWithoutId:
      description: "Specialist's Schema. The user id is not required."
      required:
        - UserWithoutId
      additionalProperties: false
      properties:
        UserWithoutId:
          $ref: "#/components/schemas/UserWithoutId"
      example:
        name: "Alexandre Martins"
        photoPath: "https://i.imgur.com/FRwhrhG.jpg"
        
        
    Specialist:
      description: "Specialist's Schema"
      required:
        - User
      additionalProperties: false
      properties:
        User:
          $ref: '#/components/schemas/User'
      example:
        id: "id_Alex"
        name: "Alexandre Martins"
        photoPath: "https://i.imgur.com/FRwhrhG.jpg"
          
    StudentWithoutId:
      description: "Student's Schema. The user id is not required."
      required:
        - UserWithoutId
      additionalProperties: false
      properties:
        UserWithoutId:
          $ref: "#/components/schemas/UserWithoutId"
      example:
        name: "Luís Silva"
        photoPath: "https://upload.wikimedia.org/wikipedia/commons/c/c7/Osama_bin_Laden%2C_portr%C3%A6t.jpg"

    Student:
      description: "Student's Schema"
      required:
        - User
      additionalProperties: false
      properties:
        User:
          $ref: "#/components/schemas/User"
      example:
        id: "id_Luis"
        name: "Luĩs Silva"
        photoPath: "https://upload.wikimedia.org/wikipedia/commons/c/c7/Osama_bin_Laden%2C_portr%C3%A6t.jpg"
          
    InstitutionManagerWithoutId:
      description: "Institution Manager's Schema. The user id is not required."
      required:
        - institutionId
        - UserWithoutId
      properties:
        UserWithoutId: 
          $ref: "#/components/schemas/UserWithoutId"
        institutionId:
          $ref: "#/components/schemas/StringInput"
      example:
        name: "Rui Braga"
        photoPath: "https://media.vogue.fr/photos/5c3618b2093f3f72befae9d6/2:3/w_2560%2Cc_limit/mood_gosling_8365.jpeg?lang=eng"
        institutionId: "institution1"
          
    InstitutionManager:
      description: "Institution Manager's Schema"
      required:
        - institutionId
        - User
      properties:
        User: 
          $ref: "#/components/schemas/User"
        institutionId:
          $ref: "#/components/schemas/StringInput"
      example:
        id: "id_Ray"
        name: "Rui Braga"
        photoPath: "https://media.vogue.fr/photos/5c3618b2093f3f72befae9d6/2:3/w_2560%2Cc_limit/mood_gosling_8365.jpeg?lang=eng"
        institutionId: "institution1"

    StringInput:
      description: "The structure of accepted strings"
      type: string
      pattern: ^[A-Za-z0-9]{3,10}$
      maxLength: 500
      minLength: 1